<?php
/**
 * Created by PhpStorm.
 * User: vlad_
 * Date: 19.03.2018
 * Time: 12:01
 */

namespace App\Services;

use App\Repositories\CategoryRepository;
use App\Repositories\MetaTagRepository;
use App\Repositories\OrderRepository;
use LiqPay;

class OrderPaymentService extends LayoutService
{
    protected $metaTagRepository;

    protected $orderRepository;

    public function __construct(CategoryRepository $categoryRepository,
                                MetaTagRepository $metaTagRepository,
                                OrderRepository $orderRepository)
    {
        parent::__construct($categoryRepository);

        $this->orderRepository = $orderRepository;

        $this->metaTagRepository = $metaTagRepository;
    }

    public function fill($model)
    {
        parent::fill($model); // TODO: Change the autogenerated stub

        $this->fillOrderStatuses($model);

        $this->fillOrder($model);

        $this->fillStatus($model);

        $this->fillMetaTags($model);

        $this->initLiqpay($model);
    }

    public function fillOrderStatuses($model)
    {
        $model->orderStatuses = $this->orderRepository->getOrderStatuses($model);
    }

    public function fillOrder($model)
    {
        $model->order = $this->orderRepository->getOrder($model);

        if (is_null($model->order))
        {
            abort(404);
        }
    }

    public function fillStatus($model)
    {
        foreach ($model->orderStatuses as $orderStatus)
        {
            if ($model->order->status_id == $orderStatus->id)
            {
                $model->status = $orderStatus;
            }
        }
    }

    public function initLiqpay($model)
    {
        $publicKey = config('services.liqpay.public_key');
        $privateKey = config('services.liqpay.private_key');
        $version = config('services.liqpay.version');

        $params = [
            'action' => 'pay',
            'amount' => !is_null($model->order->delivery_price) ? (set_format_price($model->order->total_order_amount + $model->order->delivery_price)) : $model->order->total_order_amount,
            'currency' => 'UAH',
            'description' => trans('order.pay_for') . $model->order->order_number,
            'order_id' => "" . $model->order->order_number,
            'version' => "$version",
            'language' => $model->language,
            'result_url' => "" . url_order_payment_callback()
        ];

        if (config('services.liqpay.sandbox'))
        {
            $params['sandbox'] = '1';
        }

        $model->liqpay = new LiqPay($publicKey, $privateKey);

        $model->form = $model->liqpay->cnb_form($params);
    }

    /**
     * @param $model
     */
    private function fillMetaTags($model)
    {
        $metaTag = $this->metaTagRepository->getMetaTagByPageName($model);
        $model->title = $metaTag->title;
        $model->description = $metaTag->description;
        $model->keywords = $metaTag->keywords;
        $model->h1 = $metaTag->h1;
    }
}