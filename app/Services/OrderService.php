<?php
/**
 * Created by PhpStorm.
 * User: vlad_
 * Date: 12.12.2017
 * Time: 14:37
 */

namespace App\Services;


use App\Repositories\CategoryRepository;
use App\Repositories\DeliveryRepository;
use App\Repositories\OrderProductRepository;
use App\Repositories\OrderRepository;
use App\Repositories\PaymentRepository;

class OrderService extends LayoutService
{
    protected $paymentRepository;
    protected $deliveryRepository;
    protected $orderRepository;
    protected $orderProductRepository;
    
    public function __construct(CategoryRepository $categoryRepository,
                                PaymentRepository $paymentRepository,
                                DeliveryRepository $deliveryRepository,
                                OrderRepository $orderRepository, OrderProductRepository $orderProductRepository)
    {
        parent::__construct($categoryRepository);
        $this->paymentRepository = $paymentRepository;
        $this->deliveryRepository = $deliveryRepository;
        $this->orderRepository = $orderRepository;
        $this->orderProductRepository = $orderProductRepository;
    }
    
    public function fill($model)
    {
        parent::fill($model); // TODO: Change the autogenerated stub

        $this->fillPayments($model);
        
        $this->fillDeliveries($model);
    }
    
    private function fillPayments($model)
    {
        $model->payments = $this->paymentRepository->getAllPayments($model);
    }
    
    private function fillDeliveries($model)
    {
        $model->deliveries = $this->deliveryRepository->getAllDeliveries($model);
    }
    
    public function createOrder($data, $userId, $userTypeId, $model, $cartService)
    {
        $model->order = $this->orderRepository->createOrder($data, $userId, $userTypeId, $model, $cartService);
    }

    public function createOrderProducts($model, $cartService)
    {
        $this->orderProductRepository->createOrderProducts($model, $cartService);
    }
}